{"version":3,"sources":["themeColors.js","components/Author.js","components/BottomRow.js","components/Links.js","components/Button.js","components/NewQuoteButton.js","components/Text.js","containers/QuoteBox.js","containers/App.js","index.js"],"names":["createColorObject","color","main","dark","tinycolor","darken","toString","Author","name","id","className","BottomRow","children","Link","props","target","rel","Links","text","author","twitterLink","encodeURIComponent","href","Button","join","NewQuoteButton","onClick","Text","QuoteBox","onNewQuoteClick","useState","quotedText","setQuotedText","authorName","setAuthorName","useEffect","fetchRandomQuote","fetch","then","response","json","data","quotes","randomQuote","random","length","quote","catch","error","console","log","App","themeColors","themeColor","setThemeColor","style","randomNum","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbdd9d61.chunk.js","sourcesContent":["import tinycolor from 'tinycolor2';\r\n\r\nfunction createColorObject(color) {\r\n  return {\r\n    main: color, \r\n    dark: tinycolor(color)\r\n      // Increase value passed to darken to darken\r\n      // hover effects for example \r\n      .darken(4)\r\n      .toString()\r\n  };\r\n}\r\n\r\nexport default [\r\n  // Sunflower yellow\r\n  { ...createColorObject(\"#FFC312\") }, \r\n  // Orange\r\n  { ...createColorObject(\"#EE5A24\") },\r\n  // Mint green\r\n  { ...createColorObject(\"#2ed573\") },\r\n  // Grass green\r\n  { ...createColorObject(\"#009432\") },\r\n  // Blue martina\r\n  { ...createColorObject(\"#12CBC4\") },\r\n  // Blue marine\r\n  { ...createColorObject(\"#0652DD\") },\r\n  // Turqish aqua\r\n  { ...createColorObject(\"#006266\") },\r\n  // Lightpurple circumorbital\r\n  { ...createColorObject(\"#5758BB\") },\r\n  // Berry\r\n  { ...createColorObject(\"#ED4C67\") },\r\n  // Magenta\r\n  { ...createColorObject(\"#6F1E51\") },\r\n  // Dark gray\r\n  { ...createColorObject(\"#2d3436\") },\r\n  // Red pigment\r\n  { ...createColorObject(\"#EA2027\") },\r\n];\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default function Author({ name }) {\r\n  return (\r\n    <span id=\"author\" className=\"Author\">\r\n      &mdash; {name}\r\n    </span>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function BottomRow({ children }) {\r\n  return <div className=\"BottomRow\">{children}</div>;\r\n}","import React from 'react';\r\nimport { FaFreeCodeCamp, FaGithub, FaTwitter } from 'react-icons/fa';\r\n\r\nfunction Link({ children, ...props }) {\r\n  return (\r\n    <a {...props} className=\"Link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {children}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default function Links({ text, author }) {\r\n  const twitterLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\r\n    `\"${text}\" - ${author}`\r\n  )}&hashtags=quotes`;\r\n\r\n  return (\r\n    <div className=\"Links\">\r\n      <Link href=\"https://github.com/sitek94\" id=\"github\">\r\n        <FaGithub className=\"icon\" />\r\n      </Link>\r\n      <Link\r\n        href=\"https://forum.freecodecamp.org/u/sitek94/summary\"\r\n        id=\"free-code-camp\"\r\n      >\r\n        <FaFreeCodeCamp className=\"icon\" />\r\n      </Link>\r\n      <Link href={twitterLink} id=\"tweet-quote\">\r\n        <FaTwitter className=\"icon\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Button.scss';\r\n\r\nexport default function Button({ className, ...props}) {\r\n  return (\r\n    <button {...props} className={[\"Button\", className].join(\" \")} />\r\n  )\r\n}","import React from 'react';\r\nimport Button from './Button';\r\n\r\nexport default function NewQuoteButton({ onClick }) {\r\n  return (\r\n    <Button id=\"new-quote\" onClick={onClick} className=\"NewQuoteButton\">\r\n      New Quote\r\n    </Button>\r\n  );\r\n}","import React from 'react';\r\nimport {\r\n  FaQuoteLeft,\r\n} from 'react-icons/fa';\r\n\r\nexport default function Text({ text }) {\r\n  return (\r\n    <p id=\"text\" className=\"Text\">\r\n      <FaQuoteLeft /> {text}\r\n    </p>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { random } from 'lodash';\r\n\r\nimport Author from '../components/Author';\r\nimport BottomRow from '../components/BottomRow';\r\nimport Links from '../components/Links';\r\nimport NewQuoteButton from '../components/NewQuoteButton';\r\nimport Text from '../components/Text';\r\n\r\nconst url =\r\n  'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n\r\nexport default function QuoteBox({ onNewQuoteClick }) {\r\n  const [quotedText, setQuotedText] = useState('');\r\n  const [authorName, setAuthorName] = useState('');\r\n\r\n  // Fetch quote on initial render\r\n  useEffect(() => {\r\n    fetchRandomQuote();\r\n  }, []);\r\n\r\n  const fetchRandomQuote = () => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const quotes = data.quotes;\r\n        // Get random quote\r\n        const randomNum = random(0, quotes.length);\r\n        const randomQuote = quotes[randomNum];\r\n\r\n        setAuthorName(randomQuote.author);\r\n        setQuotedText(randomQuote.quote);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setAuthorName(\"Maciek\");\r\n        setQuotedText(\"Something went wrong and we couldn't load the quote, please try again :)\");\r\n      });\r\n  };\r\n\r\n  const handleNewQuoteClick = () => {\r\n    // Change theme and fetch new quote\r\n    onNewQuoteClick();\r\n    fetchRandomQuote();\r\n  }\r\n\r\n  return (\r\n    <div id=\"quote-box\" className=\"QuoteBox\">\r\n      <Text text={quotedText} />\r\n      <Author name={authorName} />\r\n\r\n      <BottomRow>\r\n        <Links text={quotedText} author={authorName} />\r\n        <NewQuoteButton onClick={handleNewQuoteClick} />\r\n      </BottomRow>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\nimport { random } from 'lodash';\n\n\nimport themeColors from '../themeColors';\nimport QuoteBox from './QuoteBox';\n\nexport default function App() {\n  const [themeColor, setThemeColor] = useState(themeColors[2]);\n\n  // To change theme of the app I access CSS root variables \n  // Main colors in styles are based on these variables \n  const style = {\n    '--primary': themeColor.main,\n    '--primary-dark': themeColor.dark,\n  };\n\n  const changeThemeColor = () => {\n    const randomNum = themeColors[random(0, themeColors.length - 1)];\n\n    setThemeColor(randomNum);\n  }\n\n  return (\n    <div className=\"App\" style={style}>\n      <QuoteBox onNewQuoteClick={changeThemeColor} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\n\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}